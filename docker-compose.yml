services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - ./backend/.env
    environment:
      DJANGO_WAIT_FOR_DB: "1"   # optional; only useful if your entrypoint uses it
    command: >
      sh -c "
        python manage.py runserver 0.0.0.0:8000
      "
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  mysql:
    image: mysql:8.0
    command:
      - mysqld
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: technomart_db
      MYSQL_USER: technomart_user
      MYSQL_PASSWORD: technomart_4
      MYSQL_ROOT_PASSWORD: pransocool
    volumes:
      - mysql-data:/var/lib/mysql
    # Internal port is 3306 for containers; host can reach DB via 127.0.0.1:3307
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command:
      - redis-server
      - --save
      - ""
      - --appendonly
      - "no"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    working_dir: /workspace
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 8080"
    env_file:
      - ./.env
    environment:
      VITE_DEV_PROXY_TARGET: http://api:8000
      VITE_API_BASE_URL: /api
      VITE_WS_URL: ws://localhost:8000/ws/events
      CHOKIDAR_USEPOLLING: "1"
      CHOKIDAR_INTERVAL: "300"
    volumes:
      - .:/workspace
      - frontend-node-modules:/workspace/node_modules
    ports:
      - "8080:8080"
    depends_on:
      api:
        condition: service_started

volumes:
  mysql-data:
  redis-data:
  frontend-node-modules:
